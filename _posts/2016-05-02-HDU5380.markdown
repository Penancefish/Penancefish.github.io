---
layout:           post
title:            "HDU 5380"
subtitle:         "组队赛第八场"
date:             2016-05-02
author:           "Penancefish"
have-copyright:   true
tags:
    - HDU
    - 贪心
---

### 题目出处
[HDU 5380](http://acm.hdu.edu.cn/showproblem.php?pid=5380)

### 题目大意
	从0到n有n+1个城市，每个城市距城市0的距离是递增的（也就直线上有n+1个点），Mph从城市0出发到城市n，他每走一个长度要消耗一个糖果，每个城市都有卖糖果处，但是价格并不一定，只能保证在同一个城市中买糖一定贵于卖糖。输入有T组数据，每组数据先给两个值n（城市的数量），c（Mph能携带的最大糖果数）。然后给出n个值分别代表从1到n每座城市距城市0的距离，然后接下来的n+1行每行都有两个数，分别是该座城市买糖和卖糖的价格。

### 题目分析
	这是一道贪心题（当知道的时候我是绝望的，竟然是贪心），分析在下：
	1.我们每次必要消耗的一定是价值最小的。
	2.每次走到一个城市我们对于剩下的那些如果卖了能赚，说明这些糖的价值会升高（不一定在这卖了收益最大），如果发现这些糖买贵了，就把它们退掉把钱拿回来买便宜的。
	3.每次从城市出发的时候先补给满。
	4.走到目的地之后当然把剩下的卖掉啊。

>Input

```
1
4 9
6 7 13 18
10 7
8 4
3 2
5 4
5 4
```

>Output

```
105
```

### AC代码
```cpp
#include <iostream>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <deque>
#define ll long long
#define maxn 200005
#define DB cout<<sum<<" "<<ans<<" "<<endl
using namespace std;

struct node {
	ll val,cnt;
	node(){};
	node(ll v,ll c):val(v),cnt(c){};
};
int n,c;
ll ans,sum;
ll dis[maxn],buy[maxn],sell[maxn];

void work() {
	ans = 0;
	deque<node> q;
	q.push_front(node(buy[0],c));//出发时先放满
	ans+=buy[0]*c;//目前的花费
	sum = c;//持有量

	for(int i=1;i<=n;i++) {
		ll d = dis[i]-dis[i-1];//消耗值
		sum = c-d;
		//必要的消耗
		while(d) {
			node tmp = q.front();
			q.pop_front();
			if(tmp.cnt>d) {
				q.push_front(node(tmp.val,tmp.cnt-d));
				d = 0;
			} else {
				d-=tmp.cnt;
			}
		}
		//看看之前剩下的卖了能不能
		ll cnt = 0;//有多少个可以卖（改价格）
		while(!q.empty()) {
			if(q.front().val>=sell[i])break;
			else {
				cnt+=q.front().cnt;
				q.pop_front();
			}
		}
		if(cnt)q.push_front(node(sell[i],cnt));
		//看看之前买多了的是否合算
		while(!q.empty()) {
			node tmp = q.back();
			if(tmp.val>buy[i]) {
				q.pop_back();//不如在这里买划算，就把之前买的还回去
				sum-=tmp.cnt;
				ans-=tmp.val*tmp.cnt;
			}else break;
		}
		q.push_back(node(buy[i],c-sum));
		ans+=q.back().val*q.back().cnt;
	}
	//把走完之后剩下的都卖掉
	while(!q.empty()) {
		node tmp = q.front();
		q.pop_front();
		ans-=tmp.val*tmp.cnt;
	}

	printf("%I64d\n",ans);
}

int main() {
	int t;
	scanf("%d",&t);
	while(t--) {
		scanf("%d%d",&n,&c);
		for(int i=1;i<=n;i++) {
			scanf("%I64d",dis+i);
		}

		for(int i=0;i<=n;i++) {
			scanf("%I64d%I64d",buy+i,sell+i);
		}
		work();
	}
	return 0;
}
```